[core]
	editor = vi
[color]
	diff = auto
	status = auto
	branch = auto
[alias]
	lg1 = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
	lg2 = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
	lg = !"git lg1"
	lg1np = !"git lg1 --exclude=*private*"
	author = !"SEARCH=${@:-`git config user.email`}; set --; git log --format='%aN <%aE>' | uniq | grep -m 1 \"$SEARCH\""
	authors = !"SEARCH=${@:-`git config user.email`}; set --; git log --format='%aN <%aE>' | grep \"$SEARCH\" | uniq | awk '!a[$0]++'"
	reviewed = !"BRANCH=${1:-master}; shift; AUTHORS=\"~/git-reviewed.sh\"; for A in \"${@:-`git config user.email`}\"; do AUTHORS=$AUTHORS\" \\\"`git author $A`\\\"\"; done; set --; git rebase -i -x \"$AUTHORS\" $BRANCH"
	echo = !"VAR=$1; shift; echo "
	sync = !"OPTS=""; while [[ $1 =~ ^- ]]; do OPTS=\"$OPTS $1\"; shift; done; REMOTE=${1:-origin}; shift; BRANCH=${1:-master}; shift; git checkout -q --detach; git fetch -v ${OPTS} ${REMOTE} ${BRANCH}:${BRANCH}; git checkout -q -"
	synbase = !"BRANCH=${1:-master}; shift; git sync origin ${BRANCH}; git rebase ${BRANCH}"
[push]
	default = simple
